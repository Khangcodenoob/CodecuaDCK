<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8/KzVcbD2OZnpDsmJ0
        QLdXZDyWSkUxNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlBYNZluhknygKJU/4Cj
        VP+EqVf/gqdX/3KNSvFRWjWUVQAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFdN5R1lVD+jLRc/5K+
        YP+SvmD/kr5g/5K+YP+Ntl3/eJhQ/k9XNpIAAAAAAAAAAAAAAAAAAAAAAAAAAEFBKjdxi0v0irJb/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/kr5g/463Xf9wjEvvPz8rNQAAAAAAAAAAAAAAAAAAAABYZzuUgqRW/5K+
        YP+RvF7/jaZx/5K+YP+SvmD/kr5g/5K+YP+SvmD/gaRV/1ZiOpIAAAAAAAAAAAAAAACDg4MpiJ1uuZCt
        b/+VtHP/lbRz/42efv+csIn/kr5g/5K+YP+SvmD/kr5g/4KlVv9jd0GwAAAAAAAAAAAAAAAAiIiIK46f
        esCUr3b/mrd8/5q3fP+UpIf/nLGK/5K+YP+SvmD/kr5g/5K+YP+CpVb/Y3VBsAAAAAAAAAAAAAAAAAAA
        AABYZzuUgKRV/5K+YP+Qu1//jaZx/5K+YP+SvmD/kr5g/5K+YP+SvmD/gqRW/1ZiOpIAAAAAAAAAAAAA
        AAAAAAAAQUEqN3GMTPSMtFz/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/jrhd/3GMSvJCPSs2AAAAAAAA
        AAAAAAAAAAAAAAAAAABRXTeUdJNO/oy0XP+SvmD/kr5g/5K+YP+SvmD/j7pe/32gU/5RWjiXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAlJcOZlyjUv2gKJU/4CjVP+Ao1T/hatY/3WRTfFRWjWUVQAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARkEuN1ZmO5RhdEK2ZXtDs19tPo9KRTE0AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/D8AAPAPAADgBwAA4AcAAMADAADAAwAAwAMAAMAD
        AADgBwAA4AcAAPAPAAD8PwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLiQfMjYxJWg6OCiFNzUngzApIWQrIh48VQAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsIyMdOjUnpERGL9tgdELxeZdQ/4KlVv+BpFX/dJFO/2Bx
        QO9BQi3cOTYnqi4kGxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABODMmiEZMMOWBpFX+d5ZP/22GSf9wikr/dJFO/3aU
        Tv92k0//co1M/3eWT/+DqFb/SlAy4jk2KI4AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKysrBjo5Kr1uh0n0fZ9T/22FSP+GrFn/kr5g/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/iK1Z/2qDR/98nFL/b4lK9Dk1J7wuFxcLAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI6OSq9e5pS+nGMS/99nlL/kr5g/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/3+hVP9vh0r/fJxR+zk2KLkAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODgohW+JSfdxjEz/halY/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/4asWf9vh0r/b4lK8jg1
        JogAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACggICBLUTLlfZ5S/32f
        U/+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/3+g
        VP97m1L/Sk4y4ScdHRoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOjcopoKm
        Vv9qg0f/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+
        YP+SvmD/kr5g/2yESP+Cplb/OTgpqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBA
        AARESC/eeJZQ/4etWP+SvmD/kr5g/5K+YP+SvmD/irJb/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/h61Y/3qaUf9BRS/bAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALCIdNGByQe9wikr/kr5g/5K+YP+SvmD/kr5g/4y0XP+SmZD/gZZp/5G9YP+SvmD/kr5g/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/b4pK/2ByQO4rIh01AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABCQitNgqVW/32eUv+SvmD/kr5g/5K+YP+SvmD/kr5g/4WfZ/+yvbT/gJFs/5G8
        X/+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP9xjEv/dZJO/zMrJGQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAzMzMFfn5+nImPh7SNnXv/jZ17/42de/+NnXv/jZ17/42de/+NnXv/jZ17/3mC
        bf/a5OX/gpB0/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/3GMS/+Ao1T/OjgojAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAASAgoKhj5SOvZCggv+QoIL/kKCC/5Cggv+QoIL/kKCC/5Cg
        gv+QoIL/fYVz/9nk5f+CkXP/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/cYxL/4Cj
        VP85NyeLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCQitNgqVW/32eUv+SvmD/kr5g/5K+
        YP+SvmD/kr5g/4WiY/+stqv/g5Fz/465Xv+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+
        YP9xjEv/dZFO/zQqJGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwiHTRgckHvcIpK/5K+
        YP+SvmD/kr5g/5K+YP+MtFz/kpiO/4GWaf+RvWD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+
        YP+SvmD/kr5g/2+JSv9gckDuKyIdNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAABERI
        L954llD/h65Z/5K+YP+SvmD/kr5g/5K+YP+Kslv/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+
        YP+SvmD/kr5g/5K+YP+IrVn/eppR/0FFL9sAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAOjcopoKmVv9th0n/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/kr5g/22FSP+CplX/OTkqqQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAoICAgS1Ey5X6fU/9/oVT/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+AolT/fJxS/0pQM+InHR0aAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4OCiFb4lJ93GMTP+FqVj/kr5g/5K+YP+SvmD/kr5g/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/hqxZ/2+KSv9uiUr1OzkoiwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI6OSq9e5pS+nGMS/99nlL/kr5g/5K+
        YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/4SpV/+Cp1f/fJxR+zk3KbsAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsrKwY6OSq9cYtL9H2f
        U/9thUj/hqxZ/5K+YP+SvmD/kr5g/5K+YP+SvmD/kr5g/5K+YP93lk//jLVc/2+JSvQ5NSe8LhcXCwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAE5MyaHTFM04YSoVv53lk//bYZJ/3CKSv90kU7/dJFO/3CKSv9xjEv/halX/4SpV/9KUDLiOTYojgAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAsIyMdOjUnpERGL9tgdELxeZdQ/4KlVv+BpFX/dJFO/2BxQO9BQi3cOTYnqi4k
        GxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS4kHzI2MSVoOjgohTc1J4MwKSFkKyIePFUA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////n///+AH//+AAf//AAD//gAAf/wA
        AD/8AAA/+AAAH/gAAB/4AAAf+AAAH+AAAA/gAAAP+AAAH/gAAB/4AAAf+AAAH/wAAD/8AAA//gAAf/8A
        AP//gAH//+AH///+f///////////////////////
</value>
  </data>
</root>